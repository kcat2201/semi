package com.ksy.view;

import com.model.ZipcodeDAO;
import com.model.ZipcodeDTO;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author
 */
public class SubZipcode extends javax.swing.JFrame implements ActionListener {

    private JoinGUI joinGui;
    private ReserveGUI reserveGui;
    private JButton btn;
    private String zipcode;
    private String address;
    
    public SubZipcode() {
        initComponents();
        init();
        addEvent();
    }

    public SubZipcode(JoinGUI joinGui) {
        this();
        this.joinGui = joinGui;
    }

    public SubZipcode(ReserveGUI reserveGui, JButton btn) {
        this();
        this.reserveGui = reserveGui;
        this.btn = btn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfDong = new javax.swing.JTextField();
        btSearch = new javax.swing.JButton();
        btSelect = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        ztable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("주소찾기");

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        jLabel1.setText("지역명(읍면동)");

        tfDong.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N

        btSearch.setBackground(new java.awt.Color(0, 111, 62));
        btSearch.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        btSearch.setForeground(new java.awt.Color(255, 255, 255));
        btSearch.setText("검색");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        btSelect.setBackground(new java.awt.Color(254, 254, 254));
        btSelect.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        btSelect.setForeground(new java.awt.Color(0, 111, 62));
        btSelect.setText("선택");
        btSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelectActionPerformed(evt);
            }
        });

        ztable.setFont(new java.awt.Font("맑은 고딕", 0, 16)); // NOI18N
        ztable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "우편번호", "시도", "구군", "동", "번지"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ztable.setRowHeight(30);
        scrollPane.setViewportView(ztable);
        if (ztable.getColumnModel().getColumnCount() > 0) {
            ztable.getColumnModel().getColumn(0).setResizable(false);
            ztable.getColumnModel().getColumn(0).setPreferredWidth(90);
            ztable.getColumnModel().getColumn(1).setResizable(false);
            ztable.getColumnModel().getColumn(1).setPreferredWidth(110);
            ztable.getColumnModel().getColumn(2).setResizable(false);
            ztable.getColumnModel().getColumn(2).setPreferredWidth(120);
            ztable.getColumnModel().getColumn(3).setResizable(false);
            ztable.getColumnModel().getColumn(3).setPreferredWidth(120);
            ztable.getColumnModel().getColumn(4).setResizable(false);
            ztable.getColumnModel().getColumn(4).setPreferredWidth(140);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(tfDong, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(btSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btSearchActionPerformed

    private void btSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubZipcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubZipcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubZipcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubZipcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubZipcode().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSearch;
    private javax.swing.JButton btSelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextField tfDong;
    private javax.swing.JTable ztable;
    // End of variables declaration//GEN-END:variables

    private void init() {
        ztable.getTableHeader().setBackground(new Color(0, 111, 62));
        ztable.getTableHeader().setForeground(Color.white);
        ztable.getTableHeader().setFont(new Font("맑은고딕", Font.PLAIN, 16));
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    }

    private void addEvent() {
        btSearch.addActionListener(this);
        btSelect.addActionListener(this);
        ztable.addMouseListener(new EventHandler());
    }

    private void setAddress() {
        
        if (joinGui != null) {
            joinGui.tfAddress1.setText("");
            joinGui.tfZipode.setText(zipcode);
            joinGui.tfAddress1.setText(address);
        }
        if (reserveGui != null) {
            if (btn == reserveGui.btZipcode1) {
                reserveGui.tfSaddr1.setText("");
                reserveGui.tfSzipcode.setText(zipcode);
                reserveGui.tfSaddr1.setText(address);

            }
            if (btn == reserveGui.btZipcode2) {
                reserveGui.tfRaddr1.setText("");
                reserveGui.tfRZipcode.setText(zipcode);
                reserveGui.tfRaddr1.setText(address);

            }
        }
    }

    class EventHandler extends MouseAdapter {

        @Override
        public void mousePressed(MouseEvent e) {
            address="";
            int row = ztable.getSelectedRow();

            zipcode = (String) ztable.getValueAt(row, 0);

            for (int i = 1; i <= 3; i++) {
                address += ztable.getValueAt(row, i).toString() + " ";

            }

        }

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == btSearch) {
            try {
                search();
            } catch (SQLException ex) {
                Logger.getLogger(SubZipcode.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (e.getSource() == btSelect) {
            setAddress();
            this.dispose();
        }
    }

    private void search() throws SQLException {

        String dong = tfDong.getText();
        if (dong == null || dong.isEmpty()) {
            JOptionPane.showMessageDialog(this, "읍면동을 입력하세요");
            tfDong.requestFocus();
            return;
        }

        ZipcodeDAO zipcodeDao = new ZipcodeDAO();
        List<ZipcodeDTO> alist = zipcodeDao.selectZipcode(dong);

        String[] colNames = {"우편번호", "시도", "구군", "동", "번지"};
        String[][] data = new String[alist.size()][colNames.length];
        for (int i = 0; i < alist.size(); i++) {
            ZipcodeDTO dto = alist.get(i);
            data[i][0] = dto.getZipcode();
            data[i][1] = dto.getSido();
            data[i][2] = dto.getGugun();
            data[i][3] = dto.getDong();

            String startBunji = dto.getStartbunji();
            String endbunji = dto.getEndbunji();
            String bunji = startBunji;
            if (endbunji != null && !endbunji.isEmpty()) {
                bunji = startBunji + " ~ " + endbunji;
            }
            data[i][4] = bunji;
        }

        DefaultTableModel model = new DefaultTableModel();
        model.setDataVector(data, colNames);

        ztable.setModel(model);

        ztable.getColumnModel().getColumn(0).setPreferredWidth(90);
        ztable.getColumnModel().getColumn(1).setPreferredWidth(110);
        ztable.getColumnModel().getColumn(2).setPreferredWidth(120);
        ztable.getColumnModel().getColumn(3).setPreferredWidth(120);
        ztable.getColumnModel().getColumn(4).setPreferredWidth(140);

    }

}
